<?xml version="1.0"?>
<xsd:schema version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"  elementFormDefault="qualified">

    <xsd:include schemaLocation="Distributions.xsd"/>
    <xsd:include schemaLocation="Samplers.xsd"/>
    <xsd:include schemaLocation="Models.xsd"/>

    <xsd:element name="Simulation">
        <xsd:complexType>
            <xsd:all>
                <xsd:element name="RunInfo"          type="RunInfoData"      minOccurs="1"/>
                <xsd:element name="Models"           type="ModelsData"       minOccurs="1"/>
                <xsd:element name="Steps"                                    minOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                        <xsd:attribute name="verbosity" type="xsd:string" default="all"/>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="Samplers"         type="SamplerData"      minOccurs="0"/>
                <xsd:element name="DataObjects"      type="DataObjectsData"  minOccurs="0"/>
                <xsd:element name="Distributions"    type="DistributionData" minOccurs="0"/>
                <xsd:element name="Functions"                                minOccurs="0">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="Databases"                                minOccurs="0">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="OutStreamManager" type="OutStreamData"    minOccurs="0"/>
            </xsd:all>
            <xsd:attribute name="verbosity" type="verbosityAttr" default="all"/>
            <xsd:attribute name="printTimeStamps" type="xsd:string" default="true"/>
        </xsd:complexType>

        <xsd:key name="distName">
            <xsd:selector xpath="./Distributions/*"/>
            <xsd:field    xpath="@name"/>
        </xsd:key>
        <xsd:keyref name="samplerName1"  refer="distName">
            <xsd:selector xpath="./Samplers/*/variable/distribution"/>
            <xsd:field    xpath="."/>
        </xsd:keyref>
        <xsd:keyref name="samplerName2"  refer="distName">
            <xsd:selector xpath="./Samplers/*/Distribution/distribution"/>
            <xsd:field    xpath="."/>
        </xsd:keyref>
<!--         <xsd:key name="ppName">
            <xsd:selector xpath="./Models/PostProcessor"/>
            <xsd:field    xpath="@name"/>
        </xsd:key> -->
    </xsd:element>

    <xsd:simpleType  name="verbosityAttr">
        <xsd:restriction   base="xsd:string">
            <xsd:enumeration value="silent"/>
            <xsd:enumeration value="quiet" />
            <xsd:enumeration value="all"   />
            <xsd:enumeration value="debug" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="RunInfoData">
        <xsd:all>
            <xsd:element name="WorkingDir"                            minOccurs="1">
                <xsd:complexType mixed="true">
                    <xsd:attribute name="runRelative" type="xsd:string"/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="Files"              type="xsd:string"  minOccurs="0"/>
            <xsd:element name="Sequence"           type="xsd:string"  minOccurs="1"/>
            <xsd:element name="batchSize"          type="xsd:integer" minOccurs="0" default="1"/>
            <xsd:element name="JobName"            type="xsd:string"  minOccurs="0"/>
            <xsd:element name="NumThreads"         type="xsd:integer" minOccurs="0" default="1"/>
            <xsd:element name="mode" minOccurs="0">
                <xsd:complexType mixed="true">
                    <xsd:choice>
                        <xsd:element name="runQSUB"                        minOccurs="0"/>
                        <xsd:element name="nodefile"     type="xsd:string" minOccurs="0"/>
                        <xsd:element name="nodefileenv"  type="xsd:string" minOccurs="0"/>
                    </xsd:choice>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="NumMPI"             type="xsd:integer" minOccurs="0" default="1"/>
            <xsd:element name="totalNumCoresUsed"  type="xsd:integer" minOccurs="0" default="1"/>
            <xsd:element name="precommand"         type="xsd:string"  minOccurs="0" default="None"/>
            <xsd:element name="postcommand"        type="xsd:string"  minOccurs="0" default="None"/>
            <xsd:element name="clusterParameters"  type="xsd:string"  minOccurs="0" default="None"/>
            <xsd:element name="MaxLogSize"         type="xsd:integer" minOccurs="0"/>
            <xsd:element name="deleteOutExtension" type="xsd:string"  minOccurs="0" default="None"/>
            <xsd:element name="delSucLogFiles"     type="xsd:boolean" minOccurs="0" default="false"/>

            <xsd:element name="NumNode"          type="xsd:integer" minOccurs="0"/>
            <xsd:element name="queueingSoftware" type="xsd:string"  minOccurs="0" default="PBS PROFESSIONAL"/>

            <xsd:element name="expectedTime"     type="xsd:string"  minOccurs="0" default="None"/>
            <xsd:element name="DefaultInputFile" type="xsd:string"  minOccurs="0" default="test.xml"/>
            <xsd:element name="CustomMode"       minOccurs="0">
                <xsd:complexType mixed="true">
                    <xsd:attribute name="file"   type="xsd:string"  use="required"/>
                    <xsd:attribute name="class"  type="xsd:string"  use="required"/>
                </xsd:complexType>
            </xsd:element>
        </xsd:all>
    </xsd:complexType>



<!-- *********************************************************************** -->
<!--                               DataObjects                               -->
<!-- *********************************************************************** -->
    <xsd:complexType name="DataObjectsData">
      <xsd:sequence>
        <xsd:element name="Point"        type="historyDataObjectsData" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="PointSet"     type="commonDataObjectsData"  minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="History"      type="historyDataObjectsData" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="HistorySet"   type="commonDataObjectsData"  minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="optionsType">
        <xsd:all>
            <xsd:element name="inputRow"         type="xsd:integer" minOccurs="0"/>
            <xsd:element name="outputRow"        type="xsd:integer" minOccurs="0"/>
            <xsd:element name="operator"         type="xsd:string"  minOccurs="0"/>
            <xsd:element name="pivotParameter"   type="xsd:string"  minOccurs="0"/>
            <xsd:element name="outputPivotValue" type="xsd:string"  minOccurs="0"/>
            <xsd:element name="inputPivotValue"  type="xsd:float"   minOccurs="0"/>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="commonDataObjectsData">
        <xsd:all>
            <xsd:element name="Input"   type="xsd:string" minOccurs="1"/>
            <xsd:element name="Output"  type="xsd:string" minOccurs="1"/>
            <xsd:element name="options" type="optionsType" minOccurs="0"/>
        </xsd:all>
        <xsd:attribute name="name"         type="xsd:string"  use="required"/>
        <xsd:attribute name="hierarchical" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="historyDataObjectsData">
        <xsd:complexContent>
            <xsd:extension base="commonDataObjectsData">
                <xsd:attribute name="historyName" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="OutStreamData">
        <xsd:sequence>
            <!--xsd:element name="Print" type="PrintData" minOccurs="0" maxOccurs="unbounded"/ -->
            <!--xsd:element name="Plot"  type="PlotData"  minOccurs="0" maxOccurs="unbounded"/-->
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PrintData">
        <xsd:all>
            <xsd:element name="type"      type="xsd:string" minOccurs="1" default="csv"/>
            <xsd:element name="source"    type="xsd:string" minOccurs="1"/>
            <xsd:element name="variables" type="xsd:string" minOccurs="0"/>
        </xsd:all>
        <xsd:attribute name="name"        type="xsd:string" use="required"/>
    </xsd:complexType>

    <xsd:simpleType  name="PPsubType">
        <xsd:restriction   base="xsd:string">
            <xsd:enumeration value="BasicStatistics"/>
            <xsd:enumeration value="ComparisonStatistics"/>
            <xsd:enumeration value="SafestPoint" />
            <xsd:enumeration value="LimitSurface" />
            <xsd:enumeration value="LimitSurfaceIntegral" />
            <xsd:enumeration value="External" />
            <xsd:enumeration value="TopologicalDecomposition" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="PostProcessor">
        <xsd:attribute name="name"        type="xsd:string" use="required"/>
        <xsd:attribute name="subtype"        type="PPsubType" use="required"/>
    </xsd:complexType>

    <xsd:simpleType  name="BasicStatsWhatType">
        <xsd:restriction   base="xsd:string">
            <xsd:enumeration value="covariance matrix"/>
            <xsd:enumeration value="NormalizedSensitivity"/>
            <xsd:enumeration value="VarianceDependentSensitivity" />
            <xsd:enumeration value="sensitivity" />
            <xsd:enumeration value="pearson" />
            <xsd:enumeration value="expectedValue" />
            <xsd:enumeration value="sigma" />
            <xsd:enumeration value="variationCoefficient" />
            <xsd:enumeration value="variance" />
            <xsd:enumeration value="skewness" />
            <xsd:enumeration value="kurtosis" />
            <xsd:enumeration value="median" />
            <xsd:enumeration value="percentile" />
            <xsd:enumeration value="all" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="AssemblerObjectType">
      <xsd:simpleContent>
        <xsd:extension base='xsd:string'>
          <xsd:attribute name='class' type='xsd:string' use='required' />
          <xsd:attribute name='type'  type='xsd:string' use='required' />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="BasicStatistics">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="what" type="BasicStatsWhatType" minOccurs="1"></xsd:element>
            <xsd:element name='biased' type='xsd:boolean' minOccurs="0" default='false'></xsd:element>
            <xsd:element name='parameters' type='xsd:string' minOccurs="1"></xsd:element>
            <xsd:element name='methodsToRun' type='xsd:string' minOccurs="0"></xsd:element>
            <!-- TODO: Somehow point to the things existing in the function block-->
            <!-- TODO: Also conditionally require the function node if methodsToRun is present -->
            <xsd:element name='Function' type="AssemblerObjectType" minOccurs="0" />
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType  name="CompStatsBinMethod">
        <xsd:restriction   base="xsd:string">
            <xsd:enumeration value="square-root"/>
            <xsd:enumeration value="sturges"/>
        </xsd:restriction>
    </xsd:simpleType>

    <!--TODO: Figure out what type any of these sub-elements are supposed to be -->
    <xsd:complexType name="ComparisonStatistics">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="kind" minOccurs="1">
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base='xsd:string'>
                    <xsd:attribute name='num_bins' type='xsd:integer' use='required' />
                    <xsd:attribute name='bin_method'  type='CompStatsBinMethod' use='required' />
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="compare" minOccurs="1">
              <xsd:complexType>
                <xsd:all>
                  <xsd:element name='data' type='xsd:string' />
                  <!--TODO: Must be one of the Distributions -->
                  <xsd:element name='reference' type='xsd:string'/>
                </xsd:all>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="fz" type="xsd:boolean" />
            <xsd:element name="interpolation" type="xsd:string" />
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name='SafestPointVariable'>
      <xsd:all>
        <xsd:element name='distribution' type='xsd:string' />
        <xsd:element name='grid'>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base='xsd:integer'>
                <xsd:attribute name='steps' type='xsd:integer' use='required' />
                <xsd:attribute name='type'  type='xsd:integer' use='required' />
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:all>
      <xsd:attribute name='class' type='xsd:string' use='required' />
      <xsd:attribute name='type'  type='xsd:string' use='required' />
    </xsd:complexType>

    <!--TODO: Figure out what type any of these sub-elements are supposed to be -->
    <xsd:complexType name="SafestPoint">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="kind" minOccurs="1"></xsd:element>
            <!-- TODO: Somehow point to the things existing in the Distributions block-->
            <xsd:element name='Distribution' type="AssemblerObjectType" minOccurs="1" />
            <xsd:element name="controllable" type='SafestPointVariable' />
            <xsd:element name="non-controllable" type='SafestPointVariable' />
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType  name="LimitSurfaceSide">
      <xsd:restriction   base="xsd:string">
        <xsd:enumeration value="negative"/>
        <xsd:enumeration value="positive"/>
        <xsd:enumeration value="both"/>
      </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="LimitSurface">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="parameters" type='xsd:string' minOccurs="1"/>
            <xsd:element name="tolerance" type='xsd:float' default="1e-4"/>
            <xsd:element name="side" type='LimitSurfaceSide' />
            <!-- TODO: Somehow point to the things existing in the function block-->
            <xsd:element name='ROM' minOccurs="0">
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base='xsd:string'>
                    <xsd:attribute name='class' type='xsd:string' use='required' />
                    <xsd:attribute name='type'  type='xsd:string' use='required' />
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>

            <!-- TODO: Somehow point to the things existing in the function block-->
            <xsd:element name='Function' type="AssemblerObjectType" minOccurs="0" />
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LimitSurfaceIntegral">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="variable" minOccurs="1">
              <xsd:complexType>
                <xsd:all minOccurs="0">
                  <!-- TODO: Somehow point to the things existing in the Distributions block-->
                  <xsd:element name="distribution" type="xsd:string" minOccurs="0" />
                  <!-- TODO: either the above or the two below are required-->
                  <xsd:element name="lowerBound" type="xsd:float" minOccurs="0" />
                  <xsd:element name="upperBound" type="xsd:float" minOccurs="0" />
                </xsd:all>
                <xsd:attribute name="name" type="xsd:string" />
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="tolerance" type="xsd:float" minOccurs="0" default="1e-4" />
            <xsd:element name="integralType" type="xsd:string" minOccurs="0" fixed="MonteCarlo" />
            <xsd:element name="seed" type="xsd:integer" minOccurs="0" default="20021986" />
            <xsd:element name="target" type="xsd:string" minOccurs="0"/>
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="External">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="method" type="xsd:string" minOccurs="1" />
            <xsd:element name='Function' type="AssemblerObjectType" minOccurs="1" />
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType  name="TopoGraph">
      <xsd:restriction   base="xsd:string">
        <xsd:enumeration value="beta skeleton"/>
        <xsd:enumeration value="relaxed beta skeleton"/>
        <xsd:enumeration value="approximate knn"/>
      </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType  name="TopoGradient">
      <xsd:restriction   base="xsd:string">
        <xsd:enumeration value="steepest"/>
        <xsd:enumeration value="maxflow"/>
      </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType  name="TopoBeta">
      <xsd:restriction   base="xsd:float">
        <xsd:minExclusive value="0"/>
        <xsd:maxInclusive value="2"/>
      </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType  name="TopoPersistence">
      <xsd:restriction   base="xsd:string">
        <xsd:enumeration value="difference"/>
        <xsd:enumeration value="probability"/>
        <xsd:enumeration value="count"/>
      </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="TopologicalDecomposition">
      <xsd:complexContent>
        <xsd:extension base="PostProcessor">
          <xsd:all minOccurs="0">
            <xsd:element name="graph" type="TopoGraph" default="beta skeleton"/>
            <xsd:element name="gradient" type="TopoGradient" default="steepest"/>
            <xsd:element name="beta" type="TopoBeta" default="1."/>
            <xsd:element name="knn" type="xsd:integer" default="-1"/>
            <xsd:element name="weighted" type="xsd:boolean" default="false"/>
            <xsd:element name="persistence" type="TopoPersistence" default="difference"/>
            <xsd:element name="simplification" type="xsd:float" default="0"/>
            <xsd:element name="parameters" type="xsd:string" minOccurs="1"/>
            <xsd:element name="response" type="xsd:string" minOccurs="1"/>
          </xsd:all>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <!--xsd:group name="MultiRunIOStep">
     <xsd:sequence>
     <xsd:element name="MultiRun"  type="MultiRunData" minOccurs="0" maxOccurs="unbounded"/>
     <xsd:element name="IOStep"    type="IOStepData"   minOccurs="0" maxOccurs="unbounded"/>
     </xsd:sequence>
     </xsd:group>

     <xsd:complexType name="StepsData">
     <xsd:sequence>
     <xsd:group ref="MultiRunIOStep" minOccurs="0" maxOccurs="unbounded"/>
     </xsd:sequence>
     </xsd:complexType>

     <xsd:complexType name="MultiRunData">
     <xsd:sequence>
     <xsd:element name="Sampler" minOccurs="1">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     <xsd:element name="Input" minOccurs="1">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     <xsd:element name="Model" minOccurs="1">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     <xsd:element name="Output" minOccurs="1" maxOccurs="unbounded">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     <xsd:element name="SolutionExport" minOccurs="0">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     </xsd:sequence>
     <xsd:attribute name="name"        type="xsd:string" use="required"/>
     <xsd:attribute name="pauseAtEnd"  type="xsd:string"/>
     <xsd:attribute name="sleepTime"   type="xsd:string"/>
     </xsd:complexType>

     <xsd:complexType name="IOStepData">
     <xsd:all>
     <xsd:element name="Input" minOccurs="1">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     <xsd:element name="Output" minOccurs="1">
     <xsd:complexType mixed="true">
     <xsd:attribute name="class" type="xsd:string" use="required"/>
     <xsd:attribute name="type"  type="xsd:string" use="required"/>
     </xsd:complexType>
     </xsd:element>
     </xsd:all>
     <xsd:attribute name="name"        type="xsd:string" use="required"/>
     <xsd:attribute name="pauseAtEnd"  type="xsd:string"/>
     </xsd:complexType-->

</xsd:schema>
