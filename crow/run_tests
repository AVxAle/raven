#!/usr/bin/env python
import sys, os, inspect

script_dir = os.path.abspath(os.path.dirname(sys.argv[0]))
# Set the current working directory to the directory where this script is located
os.chdir(script_dir)

#Setup python path to install directory
os.environ["PYTHONPATH"] = os.path.join(script_dir,"install") + os.pathsep + \
                           os.environ.get("PYTHONPATH","")

#### Set the name of the application here and moose directory relative to the application
app_name = 'crow'

MOOSE_DIR = os.path.abspath(os.path.join('..', 'moose'))
if not os.path.exists(MOOSE_DIR) or os.listdir(MOOSE_DIR) == []:
  MOOSE_DIR = os.path.abspath(os.path.join('..','..','moose'))
  if not os.path.exists(MOOSE_DIR) or os.listdir(MOOSE_DIR) == []:
    print("MOOSE_DIR: " + MOOSE_DIR)
    print("Error: The above MOOSE_DIR is empty! Please check!")
    if "MOOSE_DIR" not in os.environ:
      sys.exit(1)

#### See if a submodule is available
if os.path.exists(os.path.abspath(os.path.join('moose', 'framework', 'Makefile'))):
  MOOSE_DIR = os.path.abspath('moose')
#### See if MOOSE_DIR is already in the environment instead
if "MOOSE_DIR" in os.environ:
  MOOSE_DIR = os.environ['MOOSE_DIR']


sys.path.append(os.path.join(MOOSE_DIR, 'python'))
import path_tool
path_tool.activate_module('TestHarness')

from TestHarness import TestHarness
# Run the tests!
TestHarness.buildAndRun(sys.argv, app_name, MOOSE_DIR)
