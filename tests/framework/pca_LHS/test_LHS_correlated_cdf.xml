<?xml version="1.0" ?>
<Simulation>
  <RunInfo>
    <WorkingDir>LHScorrelated</WorkingDir>
    <Sequence>LHSRun,Dump,PP</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="lorentzAttractor_noK.py" type="">lorentzAttractor_noK.py</Input>
    <Input name="output_basicStatistics.csv" type="">output_basicStatistics.csv</Input>
  </Files>

  <Models>
    <ExternalModel ModuleToLoad="lorentzAttractor_noK" name="PythonModule" subType="">
      <variable>sigma</variable>
      <variable>rho</variable>
      <variable>beta</variable>
      <variable>x</variable>
      <variable>y</variable>
      <variable>z</variable>
      <variable>time</variable>
      <variable>x0</variable>
      <variable>y0</variable>
      <variable>z0</variable>
    </ExternalModel>
    <PostProcessor name="InputOutput" subType="BasicStatistics" verbosity="debug">
      <what>all</what>
      <parameters>x,y,z</parameters>
    </PostProcessor>
  </Models>

  <Distributions>
    <MultivariateNormal name='MVNDist' method='pca'>
        <transformation>
            <rank>3</rank>
        </transformation>
        <mu>1.0 2.0 3.0</mu>
        <covariance type="abs">
            4.0       0      0
            0         1.0    0
            0         0      0.64 
        </covariance>
    </MultivariateNormal>
  </Distributions>

  <Samplers>
    <Stratified name="LHStest">
      <samplerInit>
        <initialSeed>10311986</initialSeed>
      </samplerInit>
      <variable name="x1">
        <distribution dim="1">MVNDist</distribution>
        <grid construction="equal" steps="10" type="CDF">0.001 0.999</grid>
      </variable>
      <variable name="y1">
        <distribution dim="2">MVNDist</distribution>
        <grid construction="equal" steps="10" type="CDF">0.001 0.999</grid>
      </variable>
      <variable name="z1">
        <distribution dim="3">MVNDist</distribution>
        <grid construction="equal" steps="10" type="CDF">0.001 0.999</grid>
      </variable>
      <variablesTransformation model="PythonModule">
        <latentVariables>x1,y1,z1</latentVariables>
        <manifestVariables>x0,y0,z0</manifestVariables>
        <method>pca</method>
      </variablesTransformation>
    </Stratified>
  </Samplers>

  <Steps>
    <MultiRun name="LHSRun">
      <Input class="DataObjects" type="PointSet">inputPlaceHolder</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="Stratified">LHStest</Sampler>
      <Output class="DataObjects" type="PointSet">testPrintPointSet</Output>
    </MultiRun>
    <IOStep name="Dump">
      <Input class="DataObjects" type="PointSet">testPrintPointSet</Input>
      <Output class="OutStreamManager" type="Print">testPrintPointSet_dump</Output>
    </IOStep>
    <PostProcess name="PP">
      <Input class="DataObjects" type="PointSet">testPrintPointSet</Input>
      <Model class="Models" type="PostProcessor">InputOutput</Model>
      <Output class="Files" type="">output_basicStatistics.csv</Output>
    </PostProcess>
  </Steps>

  <OutStreamManager>
    <Print name="testPrintPointSet_dump">
      <type>csv</type>
      <source>testPrintPointSet</source>
      <what>Input|x1,Input|y1,Input|z1,Input|x0,Input|y0,Input|z0,Output|x,Output|y,Output|z,Input|PointProbability,Input|ProbabilityWeight</what>
    </Print>
  </OutStreamManager>

  <DataObjects>
    <PointSet name="testPrintPointSet">
      <Input>x0,y0,z0,x1,y1,z1</Input>
      <Output>x,y,z</Output>
    </PointSet>
    <PointSet name="inputPlaceHolder">
      <Input>x0,y0,z0</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
  </DataObjects>

</Simulation>
