[Tests]
 [./simple_framework]
  type = 'RavenFramework'
  input = 'test_simple.xml'
  output = 'revirD_tset/FirstMRun/out~1~ideal_pump revirD_tset/FirstMRun/out~6~ideal_pump'
  csv = 'revirD_tset/FirstMRun/out~6~ideal_pump.csv'
  required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./test_output]
  type = 'RavenFramework'
  input = 'test_output.xml'
  output = 'output_check/1-2DHistoryPlot_line-line.png output_check/1-2DHistoryPlot_line-line.eps output_check/1-2DHistoryPlot_line-line.pdf output_check/fullprint_history.csv output_check/fullprint_timepointset.csv output_check/fullprint_timepoint.csv output_check/testprint_selective_history.csv output_check/testprint_selective_timepoint.csv'
  csv = 'output_check/fullprint_histories_2.csv output_check/testprint_4.csv output_check/testprint_selective_hist1_4.csv output_check/testprint_selective_hist2_4.csv output_check/testprint_selective_hist3_4.csv output_check/testprint_selective_timepointset.csv'
#  skip = 'Cannot run headless'
  #skip = 'Problem with output system filenames'
   required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./test_Classic_DynamicEventTreeRAVEN]
  type = 'RavenFramework'
  input = 'test_branch.xml'
  output = 'branch/DETrunTest/out~DET_test_1-1-2~ideal_pump branch/extract_hist_example/DET_histories_additional_info_DET_test_1-1-2.csv branch/testprint_tpset_hier_variables.csv branch/3-2DHistoryPlot_tps_scatter.pdf'
  csv = 'branch/extract_hist_example/DET_histories_DET_test_1-2.csv'
  required_executable = '../../RAVEN-%METHOD%'
  #skip = 'Josh Broke it by breaking RestartInitialize'
 [../]

 [./test_Preconditioned_DynamicEventTreeRAVEN]
  type = 'RavenFramework'
  input = 'test_preconditioned_det.xml'
  output = 'PreconditionedDynamicEventTree/PreconditionedDETrunTest/out~PreconditionedDET_test_5-1-2~ideal_pump PreconditionedDynamicEventTree/testprint_hist_hier_PreconditionedDET_test_5-2.csv PreconditionedDynamicEventTree/testprint_hist_hier_variables_PreconditionedDET_test_1-1-2.csv PreconditionedDynamicEventTree/2DHistoryPlot_line.pdf'
  csv = 'PreconditionedDynamicEventTree/PreconditionedDETrunTest/out~PreconditionedDET_test_5-1-2~ideal_pump.csv'
  required_executable = '../../RAVEN-%METHOD%'
  #skip = 'Josh Broke it by breaking RestartInitialize'
 [../]

 [./test_branch_heavy]
  type = 'RavenFramework'
  input = 'test_sbo_heavy_det.xml'
  output = 'SBO_DET/DET/out~DET_1-2-2~TMI SBO_DET/DET/out~DET_1-2-1-1-1-2~TMI.csv'
  csv = 'SBO_DET/stories_from_database_dump_8.csv SBO_DET/DET/out~DET_1-2-1-1-1-2~TMI.csv'
  max_time = 1000000
  heavy=True
  rel_err = 0.01
 [../]

 [./test_mpi]
  type = 'RavenFramework'
  heavy= True
  max_time = 100000
  input = 'test_mpi.xml'
  output = 'mpi_driver_test/FirstMRun/out~1~simple_flow_3eqn'
  csv = 'mpi_driver_test/FirstMRun/out~6~simple_flow_3eqn.csv'
 [../]

 [./test_mpi_bison]
  type = 'RavenFramework'
  heavy= True
  max_time = 100000
  input = 'test_mpi_bison.xml'
  output = 'mpi_bison_test/myLHS/out~1~case_1'
  csv = 'mpi_bison_test/myLHS/out~1~case_1.csv'
 [../]

 [./test_push_into_hdf5]
  type = 'RavenFramework'
  input = 'test_push_into_hdf5.xml'
  #skip = 'unreliable and needs fixing'
  output = 'test_extract_data_s_from_hdf5/MonteCarlo/out~1~ideal_pump.csv'
  csv = 'test_extract_data_s_from_hdf5/timepointset_from_database_dump.csv test_extract_data_s_from_hdf5/timepointset_IN_database_dump.csv'
  max_time = 500
  rel_err = 0.01
  required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./test_rom_trainer]
  type = 'RavenFramework'
  input = 'test_rom_trainer.xml'
  #skip = 'working in progress'
  output = 'test_rom_trainer/MC_for_rom_trainer/out~1~TMI test_rom_trainer/MC_for_rom_trainer/out~2~TMI.csv'
  csv = 'test_rom_trainer/outputMontecarloRom_dump.csv test_rom_trainer/outputMontecarloRomND_dump.csv'
  max_time = 1500
  rel_err = 0.001
  required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./test_rom_train_from_already_dumped_HDF5]
  type = 'RavenFramework'
  input = 'test_rom_train_from_already_dumped_HDF5.xml'
  #skip = 'working in progress'
  output='test_rom_trainer/outputMontecarloRom_dump.csv'
  csv = 'test_rom_trainer/outputMontecarloRom_dump.csv'
  max_time = 1000
  rel_err = 0.001
  prereq = test_rom_trainer
 [../]

 [./testGrid]
  type = 'RavenFramework'
  input = 'test_Grid_Sampler.xml'
  output = 'GridTest/outGrid_dump.csv'
  csv = 'GridTest/outGrid_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testRandom]
  type = 'RavenFramework'
  input = 'test_random.xml'
  output = 'RandomTest/outSet_dump.csv'
  csv = 'RandomTest/outSet_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testLHS]
  type = 'RavenFramework'
  input = 'test_LHS_Sampler.xml'
  output = 'LHStest/outLHS_dump.csv'
  csv = 'LHStest/outLHS_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testGridBison]
  type = 'RavenFramework'
  input = 'test_Grid_Sampler_Bison.xml'
  output = 'GridTestBison/CustomSampler/out~1~gap_perfect_transfer_test'
  csv = 'GridTestBison/CustomSampler/out~18~gap_perfect_transfer_test.csv GridTestBison/CustomSampler/out~17~gap_perfect_transfer_test.csv GridTestBison/outGrid_dump.csv'
  max_time = 500
  rel_err = 0.001
  required_executable = '../../../bison/bison-%METHOD%'
  #There is a problem in debug mode (possibly in bison) but this
  # test often does not work in debug mode because of the problem.
  method = 'devel opt'
 [../]

 [./testLHSBison]
  type = 'RavenFramework'
  input = 'test_LHS_Sampler_Bison.xml'
  output = 'LHStestBison/myLHS/out~1~gap_perfect_transfer_test'
  csv = 'LHStestBison/myLHS/out~1~gap_perfect_transfer_test.csv LHStestBison/myLHS/out~3~gap_perfect_transfer_test.csv'
  max_time = 500
  rel_err = 0.001
  required_executable = '../../../bison/bison-%METHOD%'
 [../]

 [./testLHSFerret]
  type = 'RavenFramework'
  input = 'test_LHS_Sampler_ferret.xml'
  output = 'LHStestFerret/myLHS/out~1~simple_diffusion'
  csv = 'LHStestFerret/myLHS/out~1~simple_diffusion.csv'
  required_executable = '../../../ferret/ferret-%METHOD%'
 [../]

 [./testLHSRaven]
   type = 'RavenFramework'
   input = 'test_LHS_Sampler_Raven.xml'
   output = 'LHStestRaven/FirstMRun/out~1~simple_flow_3eqn'
   csv = 'LHStestRaven/outGrid_dump.csv'
   method = 'devel opt'
   required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./testGridRaven]
   type = 'RavenFramework'
   input = 'test_Grid_Sampler_Raven.xml'
   output = 'GridTestRaven/FirstMRun/out~1~simple_flow_3eqn'
   csv = 'GridTestRaven/outGrid_dump.csv'
   method = 'devel opt'
   required_executable = '../../RAVEN-%METHOD%' 
 [../]


 [./testExternalModel]
  type = 'RavenFramework'
  input = 'test_Lorentz.xml'
  output = 'externalModel/testPrintHistories_dump_0.csv externalModel/testPrintHistories_dump_1.csv externalModel/testPrintHistories_dump_2.csv'
  max_time = 500
  rel_err = 0.001
 [../]


 [./testBasicStatistics]
  type = 'RavenFramework'
  input = 'test_BasicStatistics.xml'
  output = 'basicStatistics/TimePointSetPostProcTest_dump.csv basicStatistics/output_basicStatistics_PP1.csv basicStatistics/output_basicStatistics_PP2.csv basicStatistics/output_basicStatistics_PP3.csv'
  csv = 'basicStatistics/TimePointSetPostProcTest_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testLimitSurfacePostProcessor]
  type = 'RavenFramework'
  input = 'test_LimitSurface.xml'
  output = 'limitSurface/LimitSurface_dump.csv'
  csv = 'limitSurface/LimitSurface_dump.csv'
  max_time = 300
  rel_err = 0.0001
  #skip = ‘need to be fixed’
 [../]

 [./testCreateInternalObjFromCSVs]
  type = 'RavenFramework'
  input = 'test_CreateInternalObjFromCSVs.xml'
  output = 'TimePointSetPostProcTest_DUMP.csv'
  csv = 'TimePointSetPostProcTest_DUMP.csv'
  max_time = 500
  rel_err = 0.001
  prereq = testGridRaven
 [../]

 [./test_bison_mc_simple_&_alias_system]
  type = 'RavenFramework'
  input = 'test_bison_mc_simple.xml'
  output = 'MCTestBison/CustomSampler/out~1~gap_perfect_transfer_test'
  csv = 'MCTestBison/CustomSampler/out~3~gap_perfect_transfer_test.csv MCTestBison/CustomSampler/out~1~gap_perfect_transfer_test.csv MCTestBison/CustomSampler_noalias/out~3~gap_perfect_transfer_test.csv MCTestBison/CustomSampler_noalias/out~1~gap_perfect_transfer_test.csv'
  required_executable = '../../../bison/bison-%METHOD%'
 [../]

 [./test_custom_mode]
  type = 'RavenFramework'
  input = 'test_custom_mode.xml'
  output = 'mode_test/FirstMRun/out~1~ideal_pump mode_test/FirstMRun/out~2~ideal_pump'
  csv = 'mode_test/FirstMRun/out~2~ideal_pump.csv'
  required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./test_distributions]
  type = 'RavenPython'
  #python_command = python3
  input = '../../framework/TestDistributions.py'
  requires_swig2 = True
 [../]

 [./test_iostep_load]
   type = 'RavenFramework'
   input = 'test_iostep_load.xml'
   output = 'test_iostep_load/reprint_histories.xml test_iostep_load/reprint_histories.csv test_iostep_load/reprint_history.csv'
   csv = 'test_iostep_load/reprint_histories_1.csv test_iostep_load/reprint_timepoint.csv test_iostep_load/reprint_timepointset.csv'
   prereq = test_output
 [../]

 [./safest_point_pp]
  type = 'RavenFramework'
  input = 'test_safest_point.xml'
  output = 'SafestPointPP/sfs_pnt_dmp.csv SafestPointPP/lmt_srf_dmp.csv'
  csv = 'SafestPointPP/sfs_pnt_dmp.csv SafestPointPP/lmt_srf_dmp.csv'
 [../]

[]
