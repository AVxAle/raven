<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/RAVEN" xmlns:tns="http://www.example.org/RAVEN" elementFormDefault="qualified">

  <include schemaLocation=""/>
  <include schemaLocation=""/>
  <element name="Simulation" type="tns:Simulation"/>



<!-- starting from here the types describing first the overall input structure (Simulation) -->
<!-- then the different blocks (SimulationStep,DataList,SemplerList,ModelsList,RunInfo)     -->

<!-- ***************************************************************************************-->
<!-- this is the type collecting the information for all types and runs needed -->
  <complexType name="Simulation">
  <!-- this is the outermost container -->
    <sequence>
      <element name="Steps"    type="tns:Steps"    maxOccurs="1" minOccurs="1"/>
      <element name="Datas"    type="tns:Datas"    maxOccurs="1" minOccurs="0"/>
      <element name="Semplers" type="tns:Samplers" maxOccurs="1" minOccurs="0"/>
      <element name="Models"   type="tns:Models"   maxOccurs="1" minOccurs="1"/>
      <element name="Tests"    type="tns:Tests"    maxOccurs="1" minOccurs="0"/>
      <element name="RunInfo"  type="tns:RunInfo"  maxOccurs="1" minOccurs="1"/>
    </sequence>
    <attribute name="Name" type="string" use="required"/>
  </complexType>
<!-- **************************************************************************************-->



<!--start Tests ***************************************************************************-->
  <complexType name="Tests">
    <sequence>
      <element name="LimitSurface" type="tns:LimitSurface" maxOccurs="unbounded" minOccurs="1"/>
      <element name="Probability"  type="tns:Probability"  maxOccurs="unbounded" minOccurs="0"/>
      <element name="TargetValue"  type="tns:TargetValue"  maxOccurs="unbounded" minOccurs="0"/>
    </sequence>
  </complexType>

  <!--Start TestBase-->
  <complexType name="TestBase">
    <simpleContent>
      <extension base="string">
        <attribute name="Name"  type="string" use="required"/>
        <attribute name="Toll"  type="float"    use="required"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--End TestBase-->
  
  <!--Start LimitSurface-->
  <complexType name="LimitSurface">
    <simpleContent>
      <extension base="tns:TestBase">
      </extension>
    </simpleContent>
  </complexType>
  <!--End LimitSurface-->
  
  <!--Start TargetValue-->
  <complexType name="TargetValue">
    <simpleContent>
      <extension base="tns:TestBase">
      <attribute name="Logical"  type="tns:Logical" use="required"/>
      <attribute name="Value"    type="string"      use="required"/>
      <!-- here the name of the variable -->
      </extension>
    </simpleContent>
  </complexType>
  <!--End TargetValue-->
  
  <!--Start TargetValue-->
  <complexType name="Probability">
    <simpleContent>
      <extension base="tns:TargetValue">
      </extension>
    </simpleContent>
  </complexType>
  <!--End TargetValue-->
  
  <!--Start Logical -->
  <simpleType name="Logical">
    <restriction base="string">
      <enumeration value="EQ" />
      <enumeration value="GE" />
      <enumeration value="GT" />
      <enumeration value="LE" />
      <enumeration value="LT" />
    </restriction>
  </simpleType>
  <!--End Logical -->
  

  
<!--end Tests *****************************************************************************-->



<!--start RunInfo *************************************************************************-->
  <complexType name="RunInfo">
    <sequence>
      <element name="WorkingDir"    type="string"        maxOccurs="1" minOccurs="1"/>
      <element name="QuequingInfo"  type="tns:Quequing"  maxOccurs="1" minOccurs="0"/>
      <element name="ParallelInfo"  type="tns:Parallel"  maxOccurs="1" minOccurs="0"/>
      <element name="ThreadingInfo" type="tns:Threading" maxOccurs="1" minOccurs="0"/>
    </sequence>
  </complexType>
  
  <!--Start Quequing-->
  <complexType name="Quequing">
    <simpleContent>
      <extension base="string">
        <attribute name="num" type="string" use="optional"/>
        <attribute name="batchSize"        type="int"    use="required"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--End Quequing-->
  
  <!--Start Parallel-->
  <complexType name="Parallel">
    <simpleContent>
      <extension base="string">
        <attribute name="processor" type="int" use="required"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--End Parallel-->
  
  <!--Start Threading-->
  <complexType name="Threading">
    <simpleContent>
      <extension base="string">
        <attribute name="processor" type="int" use="required"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--end Threading -->
<!--end RunInfo ***************************************************************************-->



<!--start Steps ***************************************************************************-->
  <complexType name="Steps">
    <sequence>
      <element name="Input"   type="tns:StepInfo" maxOccurs="unbounded" minOccurs="1"/>
      <element name="Output"  type="tns:StepInfo" maxOccurs="unbounded" minOccurs="1"/>
      <element name="Model"   type="tns:StepInfo" maxOccurs="1" minOccurs="1"/>
      <element name="Sampler" type="tns:StepInfo" maxOccurs="1" minOccurs="0"/>
      <element name="Tester"  type="tns:StepInfo" maxOccurs="1" minOccurs="0"/>
    </sequence>
    <attribute name="Type" type="tns:StepType" use="required"/>
    <attribute name="Name" type="string"       use="required"/>
  </complexType>
  
  <!--Start StepType -->
  <simpleType name="StepType">
    <restriction base="string">
      <enumeration value="ProduceData" />
      <enumeration value="GenerateROM" />
      <enumeration value="Compute" />
    </restriction>
  </simpleType>
  <!--End StepType -->
  
  <!--Start StepInfo -->
  <complexType name="StepInfo">
    <simpleContent>
      <extension base="string">
        <attribute name="type" type="string" use="required" />
        <!-- the name -->
      </extension>
    </simpleContent>
  </complexType>
  <!--End  StepInfo-->
  
<!--End Steps *******************************************************************************-->



<!--Start Data ******************************************************************************-->
  <complexType name="Datas">
    <sequence>
      <element name="TimePoint"    type="tns:TimePoint" maxOccurs="unbounded" minOccurs="0"/>
      <element name="TimePointSet" type="tns:TimePoint" maxOccurs="unbounded" minOccurs="0"/>
      <element name="History"      type="tns:Data_base" maxOccurs="unbounded" minOccurs="0"/>
      <element name="Histories"    type="tns:Data_base" maxOccurs="unbounded" minOccurs="0"/>
    </sequence>
  </complexType>
  
  <!-- Start Data_base a base type for data container -->
  <complexType name="Data_base">
    <sequence>
      <element name="Input"  type="string" maxOccurs="1" minOccurs="0"/><!-- list of the input  parameters to follow -->
      <element name="Output" type="string" maxOccurs="1" minOccurs="0"/><!-- list of the output parameters to follow -->
    </sequence>
    <attribute name="Name" type="string" use="required"/>
  </complexType>
  <!-- End Data_base-->
  
  <!-- Start TimePoint -->
  <complexType name="TimePoint">
    <complexContent>
      <extension base="tns:Data_base">
        <attribute name="Time" type="string" use="required" />
      </extension>
    </complexContent>
  </complexType>
  <!-- End TimePoint -->
  
<!--End Data *******************************************************************************-->



<!--Start Samplers *************************************************************************-->
  <complexType name="Samplers">
    <sequence>
      <element name="MonteCarlo"     type="tns:MonteCarlo"     maxOccurs="unbounded" minOccurs="0"/>
      <element name="LatinHyperCube" type="tns:LatinHyperCube" maxOccurs="unbounded" minOccurs="0"/>
      <element name="Dakota"         type="tns:Dakota"         maxOccurs="unbounded" minOccurs="0"/>
    </sequence>    
  </complexType>

  <!--Start Dakota -->
  <complexType name="Dakota">
  </complexType>
  <!--End Dakota -->

  <!--Start LatinHyperCube-->
  <complexType name="LatinHyperCube">
    <simpleContent>
      <extension base="string">
        <attribute name="Name"      type="string" use="required" />
        <attribute name="intervals" type="int"    use="required" />
        <!-- list of the input parameters to sample -->
      </extension>
    </simpleContent>
  </complexType>
  <!--End LatinHyperCube-->
  
  <!--Start MonteCarlo-->
  <complexType name="MonteCarlo">
    <simpleContent>
      <extension base="string">
        <attribute name="Name"   type="string" use="required" />
        <attribute name="MaxRun" type="int"    use="required" />
        <!-- list of the input parameters to sample -->
      </extension>
    </simpleContent>
  </complexType>
  <!--End MonteCarlo-->
  
<!--End Samplers ***********************************************************************-->



<!--Start Models ***********************************************************************-->
  <complexType name="Models">
    <sequence>
      <element name="RAVEN"          type="string"             maxOccurs="unbounded" minOccurs="0"/>
      <element name="SVMsClassifier" type="tns:SVMsClassifier" maxOccurs="unbounded" minOccurs="0"/>
    </sequence>        
  </complexType>
  
  <!--Start SVMsClassifier-->
  <complexType name="SVMsClassifier">
    <simpleContent>
      <extension base="string">
      </extension>
    </simpleContent>
  </complexType>
  <!--End SVMsClassifier-->
  
<!--End Models *************************************************************************-->




</schema>





