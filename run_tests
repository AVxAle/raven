#!/usr/bin/env python
import sys, os, subprocess

# Set the current working directory to the directory where this script is located
os.chdir(os.path.abspath(os.path.dirname(sys.argv[0])))

#### Set the name of the application here and moose directory relative to the application
app_name = 'RAVEN'

MOOSE_DIR = os.path.abspath(os.path.join('..', 'moose'))
FRAMEWORK_DIR = os.path.abspath(os.path.join('..', 'moose', 'framework'))
#### See if MOOSE_DIR is already in the environment instead
if os.environ.has_key("MOOSE_DIR"):
  MOOSE_DIR = os.environ['MOOSE_DIR']
  FRAMEWORK_DIR = os.path.join(MOOSE_DIR, 'framework')
if os.environ.has_key("FRAMEWORK_DIR"):
  FRAMEWORK_DIR = os.environ['FRAMEWORK_DIR']

# Import the TestHarness and Helper functions from the MOOSE toolkit
sys.path.append(os.path.join(FRAMEWORK_DIR, 'scripts', 'common'))
sys.path.append(os.path.join(FRAMEWORK_DIR, 'scripts', 'TestHarness'))


#Try to import the raven libs dir into the PYTHONPATH

try:
  if os.environ.get("CHECK_PYTHON3","0") == "1":
    raven_libs_dir = subprocess.check_output("ls -d $HOME/raven_libs/pylibs3/*/python*/site-packages",shell=True,stderr=subprocess.STDOUT)
  else:
    raven_libs_dir = subprocess.check_output("ls -d $HOME/raven_libs/pylibs/*/python*/site-packages",shell=True,stderr=subprocess.STDOUT)
  raven_libs_dir = raven_libs_dir.decode().strip()
  os.environ["PYTHONPATH"] = raven_libs_dir +":"+os.environ.get("PYTHONPATH","")
  sys.path.append(raven_libs_dir)
  print "PYTHONPATH="+os.environ["PYTHONPATH"]
except:
  sys.path.append(os.path.join("scripts","TestHarness","testers"))
  import RavenUtils
  missing = RavenUtils.checkForMissingModules()
  if len(missing) > 0:
    print "No raven_libs found and missing modules "+",".join(missing)

import tools

# create an instance of the test harness passing in the main arg vector
# and the name of the application
tools.runTests(sys.argv, app_name, FRAMEWORK_DIR)
